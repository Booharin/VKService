//
//  MessagesViewController.swift
//  iMessageVK
//
//  Created by Александр on 28.11.2017.
//  Copyright © 2017 Александр. All rights reserved.
//

import UIKit
import Messages

class MessagesViewController: MSMessagesAppViewController {
    
    @IBOutlet weak var imageOfPost: UIImageView!
    @IBOutlet weak var textOfPost: UILabel!
    
    let defaults = UserDefaults(suiteName: "group.VKGroup")
    
    var news = [String]()
    var newsImages = [String: String]()
    var newsImagesRatio = [String: Double]()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        news = defaults?.array(forKey: "arrayOfNewsText") as! [String]
        newsImages = defaults?.dictionary(forKey: "dictOfImages") as! [String: String]
        newsImagesRatio = defaults?.dictionary(forKey: "dictOfImagesRatio") as! [String: Double]
        // Do any additional setup after loading the view.
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    @IBAction func sendMessage(_ sender: Any) {
        let layout = MSMessageTemplateLayout()
        let array = news[0].components(separatedBy: "<br>")
        let updateString = array.joined(separator: "\n")
        layout.caption = updateString
        let image = newsImages[news[0]]
        if image != "" {
            let url = URL(string: image!)
            let data = try? Data(contentsOf: url!)
            layout.image = UIImage(data: data!)
        }
        let message = MSMessage()
        message.layout = layout
        activeConversation?.insert(message, completionHandler: nil)
    }
    
    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        
        // Use this method to configure the extension and restore previously stored state.
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dissmises the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
    
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
        
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
        
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
        
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }
    
}
